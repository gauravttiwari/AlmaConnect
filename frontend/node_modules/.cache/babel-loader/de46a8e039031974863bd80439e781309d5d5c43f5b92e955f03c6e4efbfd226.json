{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\AlmaConnect\\\\frontend\\\\src\\\\components\\\\FeedbackForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { submitFeedback } from '../utils/feedbackApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackForm = ({\n  mentorId,\n  studentId\n}) => {\n  _s();\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await submitFeedback(mentorId, studentId, rating, comment);\n      setSuccess(true);\n      setComment('');\n      setRating(5);\n    } catch (err) {\n      setError('Failed to submit feedback');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"card\",\n    style: {\n      maxWidth: 400,\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Rate Your Mentor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Rating:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: rating,\n        onChange: e => setRating(Number(e.target.value)),\n        children: [1, 2, 3, 4, 5].map(val => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: val,\n          children: val\n        }, val, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 35\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn-primary\",\n      children: \"Submit Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green'\n      },\n      children: \"Thank you for your feedback!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackForm, \"WIe6CxhUP5BS5uFp30lTLMQ3RM8=\");\n_c = FeedbackForm;\nexport default FeedbackForm;\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["React","useState","submitFeedback","jsxDEV","_jsxDEV","FeedbackForm","mentorId","studentId","_s","rating","setRating","comment","setComment","success","setSuccess","error","setError","handleSubmit","e","preventDefault","err","onSubmit","className","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","Number","target","map","val","rows","type","color","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/AlmaConnect/frontend/src/components/FeedbackForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { submitFeedback } from '../utils/feedbackApi';\r\n\r\nconst FeedbackForm = ({ mentorId, studentId }) => {\r\n  const [rating, setRating] = useState(5);\r\n  const [comment, setComment] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await submitFeedback(mentorId, studentId, rating, comment);\r\n      setSuccess(true);\r\n      setComment('');\r\n      setRating(5);\r\n    } catch (err) {\r\n      setError('Failed to submit feedback');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"card\" style={{ maxWidth: 400, margin: '0 auto' }}>\r\n      <h3>Rate Your Mentor</h3>\r\n      <label>Rating:\r\n        <select value={rating} onChange={e => setRating(Number(e.target.value))}>\r\n          {[1,2,3,4,5].map(val => <option key={val} value={val}>{val}</option>)}\r\n        </select>\r\n      </label>\r\n      <label>Comment:\r\n        <textarea value={comment} onChange={e => setComment(e.target.value)} rows={3} />\r\n      </label>\r\n      <button type=\"submit\" className=\"btn-primary\">Submit Feedback</button>\r\n      {success && <div style={{ color: 'green' }}>Thank you for your feedback!</div>}\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FeedbackForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}