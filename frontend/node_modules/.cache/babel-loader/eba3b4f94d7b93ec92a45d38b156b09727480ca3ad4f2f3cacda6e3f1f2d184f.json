{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\AlmaConnect\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadMsg, setUploadMsg] = useState('');\n  const userId = 'replace_with_user_id'; // Replace with actual user ID from auth context\n  const userType = 'student'; // or 'alumni', replace with actual user type\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) return;\n    setUploading(true);\n    setUploadMsg('');\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await fetch(`/api/${userType === 'student' ? 'students' : 'alumni'}/${userId}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      if (data.url) {\n        setUploadMsg('Upload successful!');\n      } else {\n        setUploadMsg('Upload failed.');\n      }\n    } catch {\n      setUploadMsg('Upload error.');\n    }\n    setUploading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        maxWidth: 500,\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"John Doe\",\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: \"john@example.com\",\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Graduation Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: \"2025\",\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"React, Node.js\",\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          type: \"button\",\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          margin: '24px 0'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Profile Picture / Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange,\n          accept: \"image/*,.pdf,.doc,.docx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary\",\n          type: \"submit\",\n          disabled: uploading,\n          style: {\n            marginTop: 12\n          },\n          children: uploading ? 'Uploading...' : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.95rem',\n            color: '#1976d2',\n            marginTop: 8\n          },\n          children: [\"Files are securely uploaded to Cloudinary. Supported: images, PDF, DOC, DOCX.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 86\n          }, this), \"(Admin can switch to AWS S3 by updating backend config.)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }, this), uploadMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12,\n            color: uploadMsg.includes('successful') ? '#43a047' : '#e53935'\n          },\n          children: uploadMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n_s(Profile, \"vGGke/cayPqRfkeloVixEx0bvC8=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Profile","_s","file","setFile","uploading","setUploading","uploadMsg","setUploadMsg","userId","userType","handleFileChange","e","target","files","handleUpload","preventDefault","formData","FormData","append","res","fetch","method","body","data","json","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","type","value","readOnly","onSubmit","onChange","accept","disabled","marginTop","fontSize","color","includes","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/AlmaConnect/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Profile = () => {\r\n\tconst [file, setFile] = useState(null);\r\n\tconst [uploading, setUploading] = useState(false);\r\n\tconst [uploadMsg, setUploadMsg] = useState('');\r\n\tconst userId = 'replace_with_user_id'; // Replace with actual user ID from auth context\r\n\tconst userType = 'student'; // or 'alumni', replace with actual user type\r\n\r\n\tconst handleFileChange = (e) => {\r\n\t\tsetFile(e.target.files[0]);\r\n\t};\r\n\r\n\tconst handleUpload = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (!file) return;\r\n\t\tsetUploading(true);\r\n\t\tsetUploadMsg('');\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', file);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(`/api/${userType === 'student' ? 'students' : 'alumni'}/${userId}/upload`, {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tbody: formData,\r\n\t\t\t});\r\n\t\t\tconst data = await res.json();\r\n\t\t\tif (data.url) {\r\n\t\t\t\tsetUploadMsg('Upload successful!');\r\n\t\t\t} else {\r\n\t\t\t\tsetUploadMsg('Upload failed.');\r\n\t\t\t}\r\n\t\t} catch {\r\n\t\t\tsetUploadMsg('Upload error.');\r\n\t\t}\r\n\t\tsetUploading(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"main-container\">\r\n\t\t\t<h2>My Profile</h2>\r\n\t\t\t<div className=\"card\" style={{ maxWidth: 500, margin: '0 auto' }}>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t<input type=\"text\" value=\"John Doe\" readOnly />\r\n\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t<input type=\"email\" value=\"john@example.com\" readOnly />\r\n\t\t\t\t\t<label>Graduation Year</label>\r\n\t\t\t\t\t<input type=\"number\" value=\"2025\" readOnly />\r\n\t\t\t\t\t<label>Skills</label>\r\n\t\t\t\t\t<input type=\"text\" value=\"React, Node.js\" readOnly />\r\n\t\t\t\t\t<button className=\"btn-primary\" type=\"button\">Edit Profile</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<hr style={{ margin: '24px 0' }} />\r\n\t\t\t\t\t\t<form onSubmit={handleUpload}>\r\n\t\t\t\t\t\t\t<label>Upload Profile Picture / Resume</label>\r\n\t\t\t\t\t\t\t<input type=\"file\" onChange={handleFileChange} accept=\"image/*,.pdf,.doc,.docx\" />\r\n\t\t\t\t\t\t\t<button className=\"btn-primary\" type=\"submit\" disabled={uploading} style={{ marginTop: 12 }}>\r\n\t\t\t\t\t\t\t\t{uploading ? 'Uploading...' : 'Upload'}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<div style={{ fontSize: '0.95rem', color: '#1976d2', marginTop: 8 }}>\r\n\t\t\t\t\t\t\t\tFiles are securely uploaded to Cloudinary. Supported: images, PDF, DOC, DOCX.<br />\r\n\t\t\t\t\t\t\t\t(Admin can switch to AWS S3 by updating backend config.)\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{uploadMsg && <div style={{ marginTop: 12, color: uploadMsg.includes('successful') ? '#43a047' : '#e53935' }}>{uploadMsg}</div>}\r\n\t\t\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Profile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMW,MAAM,GAAG,sBAAsB,CAAC,CAAC;EACvC,MAAMC,QAAQ,GAAG,SAAS,CAAC,CAAC;;EAE5B,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC/BR,OAAO,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IACjCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACb,IAAI,EAAE;IACXG,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAAC,EAAE,CAAC;IAChB,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEhB,IAAI,CAAC;IAC7B,IAAI;MACH,MAAMiB,GAAG,GAAG,MAAMC,KAAK,CAAC,QAAQX,QAAQ,KAAK,SAAS,GAAG,UAAU,GAAG,QAAQ,IAAID,MAAM,SAAS,EAAE;QAClGa,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACP,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,GAAG,EAAE;QACblB,YAAY,CAAC,oBAAoB,CAAC;MACnC,CAAC,MAAM;QACNA,YAAY,CAAC,gBAAgB,CAAC;MAC/B;IACD,CAAC,CAAC,MAAM;MACPA,YAAY,CAAC,eAAe,CAAC;IAC9B;IACAF,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACCN,OAAA;IAAK2B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC9B5B,OAAA;MAAA4B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhC,OAAA;MAAK2B,SAAS,EAAC,MAAM;MAACM,KAAK,EAAE;QAAEC,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAP,QAAA,gBAChE5B,OAAA;QAAA4B,QAAA,gBACC5B,OAAA;UAAA4B,QAAA,EAAO;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBhC,OAAA;UAAOoC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAC,UAAU;UAACC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/ChC,OAAA;UAAA4B,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBhC,OAAA;UAAOoC,IAAI,EAAC,OAAO;UAACC,KAAK,EAAC,kBAAkB;UAACC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxDhC,OAAA;UAAA4B,QAAA,EAAO;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9BhC,OAAA;UAAOoC,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAC,MAAM;UAACC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7ChC,OAAA;UAAA4B,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBhC,OAAA;UAAOoC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAC,gBAAgB;UAACC,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrDhC,OAAA;UAAQ2B,SAAS,EAAC,aAAa;UAACS,IAAI,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACPhC,OAAA;QAAIiC,KAAK,EAAE;UAAEE,MAAM,EAAE;QAAS;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjChC,OAAA;QAAMuC,QAAQ,EAAExB,YAAa;QAAAa,QAAA,gBAC5B5B,OAAA;UAAA4B,QAAA,EAAO;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9ChC,OAAA;UAAOoC,IAAI,EAAC,MAAM;UAACI,QAAQ,EAAE7B,gBAAiB;UAAC8B,MAAM,EAAC;QAAyB;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClFhC,OAAA;UAAQ2B,SAAS,EAAC,aAAa;UAACS,IAAI,EAAC,QAAQ;UAACM,QAAQ,EAAErC,SAAU;UAAC4B,KAAK,EAAE;YAAEU,SAAS,EAAE;UAAG,CAAE;UAAAf,QAAA,EAC1FvB,SAAS,GAAG,cAAc,GAAG;QAAQ;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACThC,OAAA;UAAKiC,KAAK,EAAE;YAAEW,QAAQ,EAAE,SAAS;YAAEC,KAAK,EAAE,SAAS;YAAEF,SAAS,EAAE;UAAE,CAAE;UAAAf,QAAA,GAAC,+EACS,eAAA5B,OAAA;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,4DAEpF;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACLzB,SAAS,iBAAIP,OAAA;UAAKiC,KAAK,EAAE;YAAEU,SAAS,EAAE,EAAE;YAAEE,KAAK,EAAEtC,SAAS,CAACuC,QAAQ,CAAC,YAAY,CAAC,GAAG,SAAS,GAAG;UAAU,CAAE;UAAAlB,QAAA,EAAErB;QAAS;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1H,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAER,CAAC;AAAC9B,EAAA,CAlEID,OAAO;AAAA8C,EAAA,GAAP9C,OAAO;AAmEb,eAAeA,OAAO;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}