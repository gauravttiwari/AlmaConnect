{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\AlmaConnect\\\\frontend\\\\src\\\\pages\\\\JobBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobBoard = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [showPostForm, setShowPostForm] = useState(false);\n  const [postForm, setPostForm] = useState({\n    title: '',\n    company: '',\n    description: ''\n  });\n  const [applyForm, setApplyForm] = useState({\n    resume: null,\n    jobId: null\n  });\n  const [applyMsg, setApplyMsg] = useState('');\n  useEffect(() => {\n    fetch('/api/jobs').then(res => res.json()).then(data => setJobs(data));\n  }, []);\n  const handlePostChange = e => {\n    setPostForm({\n      ...postForm,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePostJob = async e => {\n    e.preventDefault();\n    const res = await fetch('/api/jobs', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postForm)\n    });\n    const data = await res.json();\n    setJobs(jobs => [...jobs, data]);\n    setShowPostForm(false);\n    setPostForm({\n      title: '',\n      company: '',\n      description: ''\n    });\n  };\n  const handleResumeChange = e => {\n    setApplyForm({\n      ...applyForm,\n      resume: e.target.files[0]\n    });\n  };\n  const handleApply = async jobId => {\n    if (!applyForm.resume) return setApplyMsg('Please select a resume file.');\n    const formData = new FormData();\n    formData.append('file', applyForm.resume);\n    // Upload resume to backend\n    const uploadRes = await fetch('/api/jobs/resume', {\n      method: 'POST',\n      body: formData\n    });\n    const uploadData = await uploadRes.json();\n    // Apply to job with resume URL\n    const res = await fetch(`/api/jobs/${jobId}/apply`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        studentId: 'replace_with_student_id',\n        resume: uploadData.url\n      })\n    });\n    const data = await res.json();\n    setApplyMsg(data.message || 'Applied!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Job Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-primary\",\n      style: {\n        marginBottom: 18\n      },\n      onClick: () => setShowPostForm(!showPostForm),\n      children: showPostForm ? 'Cancel' : 'Post a Job'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), showPostForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePostJob,\n      style: {\n        marginBottom: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: postForm.title,\n        onChange: handlePostChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"company\",\n        value: postForm.company,\n        onChange: handlePostChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: postForm.description,\n        onChange: handlePostChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary\",\n        type: \"submit\",\n        children: \"Post Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 24,\n        flexWrap: 'wrap'\n      },\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          flex: '1 1 320px',\n          minWidth: 320\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Company: \", job.company]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            marginTop: 12\n          },\n          onSubmit: e => {\n            e.preventDefault();\n            handleApply(job._id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Upload Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".pdf,.doc,.docx\",\n            onChange: handleResumeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            type: \"submit\",\n            style: {\n              marginTop: 8\n            },\n            children: \"Apply\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), applyMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8,\n            color: '#43a047'\n          },\n          children: applyMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }, this)]\n      }, job._id || job.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n_s(JobBoard, \"HTqpqt6jkzS8KGSklZFGdTmnRwg=\");\n_c = JobBoard;\nexport default JobBoard;\nvar _c;\n$RefreshReg$(_c, \"JobBoard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","JobBoard","_s","jobs","setJobs","showPostForm","setShowPostForm","postForm","setPostForm","title","company","description","applyForm","setApplyForm","resume","jobId","applyMsg","setApplyMsg","fetch","then","res","json","data","handlePostChange","e","target","name","value","handlePostJob","preventDefault","method","headers","body","JSON","stringify","handleResumeChange","files","handleApply","formData","FormData","append","uploadRes","uploadData","studentId","url","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","onSubmit","onChange","required","type","display","gap","flexWrap","map","job","flex","minWidth","marginTop","_id","accept","color","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/AlmaConnect/frontend/src/pages/JobBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst JobBoard = () => {\r\n\tconst [jobs, setJobs] = useState([]);\r\n\tconst [showPostForm, setShowPostForm] = useState(false);\r\n\tconst [postForm, setPostForm] = useState({ title: '', company: '', description: '' });\r\n\tconst [applyForm, setApplyForm] = useState({ resume: null, jobId: null });\r\n\tconst [applyMsg, setApplyMsg] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/api/jobs')\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => setJobs(data));\r\n\t}, []);\r\n\r\n\tconst handlePostChange = e => {\r\n\t\tsetPostForm({ ...postForm, [e.target.name]: e.target.value });\r\n\t};\r\n\r\n\tconst handlePostJob = async e => {\r\n\t\te.preventDefault();\r\n\t\tconst res = await fetch('/api/jobs', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify(postForm),\r\n\t\t});\r\n\t\tconst data = await res.json();\r\n\t\tsetJobs(jobs => [...jobs, data]);\r\n\t\tsetShowPostForm(false);\r\n\t\tsetPostForm({ title: '', company: '', description: '' });\r\n\t};\r\n\r\n\tconst handleResumeChange = e => {\r\n\t\tsetApplyForm({ ...applyForm, resume: e.target.files[0] });\r\n\t};\r\n\r\n\tconst handleApply = async (jobId) => {\r\n\t\tif (!applyForm.resume) return setApplyMsg('Please select a resume file.');\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('file', applyForm.resume);\r\n\t\t// Upload resume to backend\r\n\t\tconst uploadRes = await fetch('/api/jobs/resume', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\tbody: formData,\r\n\t\t});\r\n\t\tconst uploadData = await uploadRes.json();\r\n\t\t// Apply to job with resume URL\r\n\t\tconst res = await fetch(`/api/jobs/${jobId}/apply`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify({ studentId: 'replace_with_student_id', resume: uploadData.url }),\r\n\t\t});\r\n\t\tconst data = await res.json();\r\n\t\tsetApplyMsg(data.message || 'Applied!');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"main-container\">\r\n\t\t\t<h2>Job Board</h2>\r\n\t\t\t<button className=\"btn-primary\" style={{ marginBottom: 18 }} onClick={() => setShowPostForm(!showPostForm)}>\r\n\t\t\t\t{showPostForm ? 'Cancel' : 'Post a Job'}\r\n\t\t\t</button>\r\n\t\t\t{showPostForm && (\r\n\t\t\t\t<form onSubmit={handlePostJob} style={{ marginBottom: 24 }}>\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input name=\"title\" value={postForm.title} onChange={handlePostChange} required />\r\n\t\t\t\t\t<label>Company</label>\r\n\t\t\t\t\t<input name=\"company\" value={postForm.company} onChange={handlePostChange} required />\r\n\t\t\t\t\t<label>Description</label>\r\n\t\t\t\t\t<textarea name=\"description\" value={postForm.description} onChange={handlePostChange} required />\r\n\t\t\t\t\t<button className=\"btn-primary\" type=\"submit\">Post Job</button>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t\t<div style={{ display: 'flex', gap: 24, flexWrap: 'wrap' }}>\r\n\t\t\t\t{jobs.map(job => (\r\n\t\t\t\t\t<div className=\"card\" key={job._id || job.title} style={{ flex: '1 1 320px', minWidth: 320 }}>\r\n\t\t\t\t\t\t<h3>{job.title}</h3>\r\n\t\t\t\t\t\t<p>Company: {job.company}</p>\r\n\t\t\t\t\t\t<p>{job.description}</p>\r\n\t\t\t\t\t\t<form style={{ marginTop: 12 }} onSubmit={e => { e.preventDefault(); handleApply(job._id); }}>\r\n\t\t\t\t\t\t\t<label>Upload Resume</label>\r\n\t\t\t\t\t\t\t<input type=\"file\" accept=\".pdf,.doc,.docx\" onChange={handleResumeChange} />\r\n\t\t\t\t\t\t\t<button className=\"btn-primary\" type=\"submit\" style={{ marginTop: 8 }}>Apply</button>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t{applyMsg && <div style={{ marginTop: 8, color: '#43a047' }}>{applyMsg}</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default JobBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}